/**
 * Create PR for agent branch
 */

import { Octokit } from '@octokit/rest';
import * as dotenv from 'dotenv';

dotenv.config();

async function createPR() {
  const token = process.env.GITHUB_TOKEN;
  if (!token) {
    throw new Error('GITHUB_TOKEN is required');
  }

  const owner = 'otsu5';
  const repo = 'miyabi-project-01';
  const head = 'agent/issue-1-1760306867';
  const base = 'main';
  const issueNumber = 1;

  const octokit = new Octokit({ auth: token });

  console.log(`üìù Creating PR for branch: ${head}...`);

  const { data: pr } = await octokit.pulls.create({
    owner,
    repo,
    title: `feat: autonomous agent implementation for issue #${issueNumber}`,
    head,
    base,
    body: `## ü§ñ Autonomous Agent Execution Report

**Issue**: #${issueNumber}
**Branch**: ${head}

### Summary

This PR was automatically generated by the Autonomous Operations Agent system.

### Changes

- Code generated by CodeGenAgent
- Quality checked by ReviewAgent
- Tests generated automatically

### Files Generated

- \`src/greet.ts\` - Multi-language greeting function (EN/JA/ES)
- \`tests/greet.test.ts\` - Comprehensive test suite

### Checklist

- [x] Code generated
- [x] Tests generated
- [x] Quality check passed
- [ ] Manual review required
- [ ] Ready to merge

### Related Issues

Closes #${issueNumber}

---

ü§ñ Generated with [Claude Code](https://claude.com/claude-code)

Co-Authored-By: Claude <noreply@anthropic.com>`,
    draft: true
  });

  console.log(`‚úÖ PR created: #${pr.number}`);
  console.log(`üîó ${pr.html_url}`);

  // Add labels
  await octokit.issues.addLabels({
    owner,
    repo,
    issue_number: pr.number,
    labels: ['ü§ñagent-generated', 'automated', 'needs-review']
  });

  console.log(`‚úÖ Labels added`);
}

createPR().catch((error) => {
  console.error('‚ùå Error:', error.message);
  process.exit(1);
});
